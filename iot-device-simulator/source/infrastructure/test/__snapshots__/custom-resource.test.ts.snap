// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IoT Device Simulator customResourcesConstruct Test 1`] = `
Object {
  "Resources": Object {
    "TestCustomResourceConsoleConfig9233433D": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ConfigFileName": "aws_config.js",
        "DestinationBucket": Object {
          "Ref": "testConsoleBucketC1925855",
        },
        "Resource": "CreateConfig",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "TestCustomResourceHelperLambda4F3A7ED4",
            "Arn",
          ],
        },
        "configObj": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"aws_iot_endpoint\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "TestCustomResourceEndpointAddress55F0267E",
                  "IOT_ENDPOINT",
                ],
              },
              "\\",\\"API\\":{\\"endpoints\\":[{\\"name\\":\\"ids\\",\\"endpoint\\":\\"https://12ab34cde5.execute-api.us-east-1.amazonaws.com/test\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\"}]},\\"Auth\\":{\\"identityPoolId\\":\\"testIdentityPool\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"userPoolId\\":\\"testUserPool\\",\\"userPoolWebClientId\\":\\"testUserPoolClient\\"},\\"aws_iot_policy_name\\":\\"testIoTPolicy\\",\\"aws_project_region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"geo\\":{\\"AmazonLocationService\\":{\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"maps\\":{\\"items\\":{\\"testMap\\":{\\"style\\":\\"VectorEsriNavigation\\"}},\\"default\\":\\"testMap\\"},\\"search_indices\\":{\\"items\\":[\\"testPlaceIndex\\"],\\"default\\":\\"testPlaceIndex\\"}}}}",
            ],
          ],
        },
      },
      "Type": "Custom::CopyConfigFiles",
      "UpdateReplacePolicy": "Delete",
    },
    "TestCustomResourceCopyConsoleFilesE61CD7FB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucket": Object {
          "Ref": "testConsoleBucketC1925855",
        },
        "ManifestFile": "site-manifest.json",
        "Resource": "CopyS3Assets",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "TestCustomResourceHelperLambda4F3A7ED4",
            "Arn",
          ],
        },
        "SourceBucket": "test-bucket-region",
        "SourcePrefix": "testPrefix/",
      },
      "Type": "Custom::CopyConsoleFiles",
      "UpdateReplacePolicy": "Delete",
    },
    "TestCustomResourceCopyRouteFilesB49E39F7": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucket": Object {
          "Ref": "testRouteBucket64D9BEB5",
        },
        "ManifestFile": "routes-manifest.json",
        "Resource": "CopyS3Assets",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "TestCustomResourceHelperLambda4F3A7ED4",
            "Arn",
          ],
        },
        "SourceBucket": "test-bucket-region",
        "SourcePrefix": "testPrefix/",
      },
      "Type": "Custom::CopyRouteFiles",
      "UpdateReplacePolicy": "Delete",
    },
    "TestCustomResourceCustomResourceLambdaIoTPolicy36A1424E": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "To connect IoT and attach IoT policy to Cognito identity cannot speficy the specific resources.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iot:DetachPrincipalPolicy",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomResourceLambdaIoTPolicy",
        "Roles": Array [
          Object {
            "Ref": "TestCustomResourceHelperLambdaRoleA52DBB50",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestCustomResourceDetachIoTPolicyF6F108AC": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "IotPolicyName": "testIoTPolicy",
        "Resource": "DetachIoTPolicy",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "TestCustomResourceHelperLambda4F3A7ED4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "TestCustomResourceEndpointAddress55F0267E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Resource": "DescribeIoTEndpoint",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "TestCustomResourceHelperLambda4F3A7ED4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "TestCustomResourceHelperLambda4F3A7ED4": Object {
      "DependsOn": Array [
        "TestCustomResourceHelperLambdaRoleDefaultPolicy236FD1D8",
        "TestCustomResourceHelperLambdaRoleA52DBB50",
        "TestPolicyCC05E598",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "test-bucket-region",
          "S3Key": "testPrefix//custom-resource.zip",
        },
        "Description": "IoT Device Simulator custom resource function",
        "Environment": Object {
          "Variables": Object {
            "SOLUTION_ID": "testId",
            "SOLUTION_VERSION": "testVersion",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "TestCustomResourceHelperLambdaRoleA52DBB50",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 240,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestCustomResourceHelperLambdaRoleA52DBB50": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W11",
              "reason": "iot:DescribeEndpoint cannot specify the resource.",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "iot:DescribeEndpoint",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "customResourcePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestCustomResourceHelperLambdaRoleDefaultPolicy236FD1D8": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::test-bucket-region",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::test-bucket-region/testPrefix//*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "testConsoleBucketC1925855",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "testRouteBucket64D9BEB5",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "iot:ListTargetsForPolicy",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iot:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":policy/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestCustomResourceHelperLambdaRoleDefaultPolicy236FD1D8",
        "Roles": Array [
          Object {
            "Ref": "TestCustomResourceHelperLambdaRoleA52DBB50",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestCustomResourceUUID90DFF55D": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Resource": "CreateUUID",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "TestCustomResourceHelperLambda4F3A7ED4",
            "Arn",
          ],
        },
        "StackName": Object {
          "Ref": "AWS::StackName",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "TestPolicyCC05E598": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudwatch:Get*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestPolicyCC05E598",
        "Roles": Array [
          Object {
            "Ref": "TestCustomResourceHelperLambdaRoleA52DBB50",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testConsoleBucketC1925855": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testRouteBucket64D9BEB5": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;
